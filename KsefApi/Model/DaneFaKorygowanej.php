<?php
/**
 * DaneFaKorygowanej
 *
 * PHP version 5
 *
 * @category Class
 * @package  KsefApi
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * KSeF API
 *
 * API do systemu KSeF
 *
 * OpenAPI spec version: 1.2.3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.52
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace KsefApi\Model;

use \ArrayAccess;
use \KsefApi\ObjectSerializer;

/**
 * DaneFaKorygowanej Class Doc Comment
 *
 * @category Class
 * @description Dane faktury korygowanej
 * @package  KsefApi
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class DaneFaKorygowanej implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'DaneFaKorygowanej';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'data_wyst_fa_korygowanej' => '\KsefApi\Model\TDataT',
        'nr_fa_korygowanej' => '\KsefApi\Model\TZnakowy',
        'nr_kse_f' => '\KsefApi\Model\TWybor1',
        'nr_kse_ffa_korygowanej' => '\KsefApi\Model\TNumerKSeF',
        'nr_kse_fn' => '\KsefApi\Model\TWybor1'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'data_wyst_fa_korygowanej' => null,
        'nr_fa_korygowanej' => null,
        'nr_kse_f' => null,
        'nr_kse_ffa_korygowanej' => null,
        'nr_kse_fn' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'data_wyst_fa_korygowanej' => 'DataWystFaKorygowanej',
        'nr_fa_korygowanej' => 'NrFaKorygowanej',
        'nr_kse_f' => 'NrKSeF',
        'nr_kse_ffa_korygowanej' => 'NrKSeFFaKorygowanej',
        'nr_kse_fn' => 'NrKSeFN'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'data_wyst_fa_korygowanej' => 'setDataWystFaKorygowanej',
        'nr_fa_korygowanej' => 'setNrFaKorygowanej',
        'nr_kse_f' => 'setNrKseF',
        'nr_kse_ffa_korygowanej' => 'setNrKseFfaKorygowanej',
        'nr_kse_fn' => 'setNrKseFn'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'data_wyst_fa_korygowanej' => 'getDataWystFaKorygowanej',
        'nr_fa_korygowanej' => 'getNrFaKorygowanej',
        'nr_kse_f' => 'getNrKseF',
        'nr_kse_ffa_korygowanej' => 'getNrKseFfaKorygowanej',
        'nr_kse_fn' => 'getNrKseFn'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }



    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['data_wyst_fa_korygowanej'] = isset($data['data_wyst_fa_korygowanej']) ? $data['data_wyst_fa_korygowanej'] : null;
        $this->container['nr_fa_korygowanej'] = isset($data['nr_fa_korygowanej']) ? $data['nr_fa_korygowanej'] : null;
        $this->container['nr_kse_f'] = isset($data['nr_kse_f']) ? $data['nr_kse_f'] : null;
        $this->container['nr_kse_ffa_korygowanej'] = isset($data['nr_kse_ffa_korygowanej']) ? $data['nr_kse_ffa_korygowanej'] : null;
        $this->container['nr_kse_fn'] = isset($data['nr_kse_fn']) ? $data['nr_kse_fn'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['data_wyst_fa_korygowanej'] === null) {
            $invalidProperties[] = "'data_wyst_fa_korygowanej' can't be null";
        }
        if ($this->container['nr_fa_korygowanej'] === null) {
            $invalidProperties[] = "'nr_fa_korygowanej' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets data_wyst_fa_korygowanej
     *
     * @return \KsefApi\Model\TDataT
     */
    public function getDataWystFaKorygowanej()
    {
        return $this->container['data_wyst_fa_korygowanej'];
    }

    /**
     * Sets data_wyst_fa_korygowanej
     *
     * @param \KsefApi\Model\TDataT $data_wyst_fa_korygowanej data_wyst_fa_korygowanej
     *
     * @return $this
     */
    public function setDataWystFaKorygowanej($data_wyst_fa_korygowanej)
    {
        $this->container['data_wyst_fa_korygowanej'] = $data_wyst_fa_korygowanej;

        return $this;
    }

    /**
     * Gets nr_fa_korygowanej
     *
     * @return \KsefApi\Model\TZnakowy
     */
    public function getNrFaKorygowanej()
    {
        return $this->container['nr_fa_korygowanej'];
    }

    /**
     * Sets nr_fa_korygowanej
     *
     * @param \KsefApi\Model\TZnakowy $nr_fa_korygowanej nr_fa_korygowanej
     *
     * @return $this
     */
    public function setNrFaKorygowanej($nr_fa_korygowanej)
    {
        $this->container['nr_fa_korygowanej'] = $nr_fa_korygowanej;

        return $this;
    }

    /**
     * Gets nr_kse_f
     *
     * @return \KsefApi\Model\TWybor1
     */
    public function getNrKseF()
    {
        return $this->container['nr_kse_f'];
    }

    /**
     * Sets nr_kse_f
     *
     * @param \KsefApi\Model\TWybor1 $nr_kse_f nr_kse_f
     *
     * @return $this
     */
    public function setNrKseF($nr_kse_f)
    {
        $this->container['nr_kse_f'] = $nr_kse_f;

        return $this;
    }

    /**
     * Gets nr_kse_ffa_korygowanej
     *
     * @return \KsefApi\Model\TNumerKSeF
     */
    public function getNrKseFfaKorygowanej()
    {
        return $this->container['nr_kse_ffa_korygowanej'];
    }

    /**
     * Sets nr_kse_ffa_korygowanej
     *
     * @param \KsefApi\Model\TNumerKSeF $nr_kse_ffa_korygowanej nr_kse_ffa_korygowanej
     *
     * @return $this
     */
    public function setNrKseFfaKorygowanej($nr_kse_ffa_korygowanej)
    {
        $this->container['nr_kse_ffa_korygowanej'] = $nr_kse_ffa_korygowanej;

        return $this;
    }

    /**
     * Gets nr_kse_fn
     *
     * @return \KsefApi\Model\TWybor1
     */
    public function getNrKseFn()
    {
        return $this->container['nr_kse_fn'];
    }

    /**
     * Sets nr_kse_fn
     *
     * @param \KsefApi\Model\TWybor1 $nr_kse_fn nr_kse_fn
     *
     * @return $this
     */
    public function setNrKseFn($nr_kse_fn)
    {
        $this->container['nr_kse_fn'] = $nr_kse_fn;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
