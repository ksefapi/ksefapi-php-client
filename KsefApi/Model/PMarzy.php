<?php
/**
 * PMarzy
 *
 * PHP version 5
 *
 * @category Class
 * @package  KsefApi
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * KSeF API
 *
 * API do systemu KSeF
 *
 * OpenAPI spec version: 1.2.3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.52
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace KsefApi\Model;

use \ArrayAccess;
use \KsefApi\ObjectSerializer;

/**
 * PMarzy Class Doc Comment
 *
 * @category Class
 * @package  KsefApi
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class PMarzy implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'PMarzy';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'p_p_marzy' => '\KsefApi\Model\TWybor1',
        'p_p_marzy_2' => '\KsefApi\Model\TWybor1',
        'p_p_marzy_3_1' => '\KsefApi\Model\TWybor1',
        'p_p_marzy_3_2' => '\KsefApi\Model\TWybor1',
        'p_p_marzy_3_3' => '\KsefApi\Model\TWybor1',
        'p_p_marzy_n' => '\KsefApi\Model\TWybor1'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'p_p_marzy' => null,
        'p_p_marzy_2' => null,
        'p_p_marzy_3_1' => null,
        'p_p_marzy_3_2' => null,
        'p_p_marzy_3_3' => null,
        'p_p_marzy_n' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'p_p_marzy' => 'P_PMarzy',
        'p_p_marzy_2' => 'P_PMarzy_2',
        'p_p_marzy_3_1' => 'P_PMarzy_3_1',
        'p_p_marzy_3_2' => 'P_PMarzy_3_2',
        'p_p_marzy_3_3' => 'P_PMarzy_3_3',
        'p_p_marzy_n' => 'P_PMarzyN'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'p_p_marzy' => 'setPPMarzy',
        'p_p_marzy_2' => 'setPPMarzy2',
        'p_p_marzy_3_1' => 'setPPMarzy31',
        'p_p_marzy_3_2' => 'setPPMarzy32',
        'p_p_marzy_3_3' => 'setPPMarzy33',
        'p_p_marzy_n' => 'setPPMarzyN'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'p_p_marzy' => 'getPPMarzy',
        'p_p_marzy_2' => 'getPPMarzy2',
        'p_p_marzy_3_1' => 'getPPMarzy31',
        'p_p_marzy_3_2' => 'getPPMarzy32',
        'p_p_marzy_3_3' => 'getPPMarzy33',
        'p_p_marzy_n' => 'getPPMarzyN'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }



    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['p_p_marzy'] = isset($data['p_p_marzy']) ? $data['p_p_marzy'] : null;
        $this->container['p_p_marzy_2'] = isset($data['p_p_marzy_2']) ? $data['p_p_marzy_2'] : null;
        $this->container['p_p_marzy_3_1'] = isset($data['p_p_marzy_3_1']) ? $data['p_p_marzy_3_1'] : null;
        $this->container['p_p_marzy_3_2'] = isset($data['p_p_marzy_3_2']) ? $data['p_p_marzy_3_2'] : null;
        $this->container['p_p_marzy_3_3'] = isset($data['p_p_marzy_3_3']) ? $data['p_p_marzy_3_3'] : null;
        $this->container['p_p_marzy_n'] = isset($data['p_p_marzy_n']) ? $data['p_p_marzy_n'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets p_p_marzy
     *
     * @return \KsefApi\Model\TWybor1
     */
    public function getPPMarzy()
    {
        return $this->container['p_p_marzy'];
    }

    /**
     * Sets p_p_marzy
     *
     * @param \KsefApi\Model\TWybor1 $p_p_marzy p_p_marzy
     *
     * @return $this
     */
    public function setPPMarzy($p_p_marzy)
    {
        $this->container['p_p_marzy'] = $p_p_marzy;

        return $this;
    }

    /**
     * Gets p_p_marzy_2
     *
     * @return \KsefApi\Model\TWybor1
     */
    public function getPPMarzy2()
    {
        return $this->container['p_p_marzy_2'];
    }

    /**
     * Sets p_p_marzy_2
     *
     * @param \KsefApi\Model\TWybor1 $p_p_marzy_2 p_p_marzy_2
     *
     * @return $this
     */
    public function setPPMarzy2($p_p_marzy_2)
    {
        $this->container['p_p_marzy_2'] = $p_p_marzy_2;

        return $this;
    }

    /**
     * Gets p_p_marzy_3_1
     *
     * @return \KsefApi\Model\TWybor1
     */
    public function getPPMarzy31()
    {
        return $this->container['p_p_marzy_3_1'];
    }

    /**
     * Sets p_p_marzy_3_1
     *
     * @param \KsefApi\Model\TWybor1 $p_p_marzy_3_1 p_p_marzy_3_1
     *
     * @return $this
     */
    public function setPPMarzy31($p_p_marzy_3_1)
    {
        $this->container['p_p_marzy_3_1'] = $p_p_marzy_3_1;

        return $this;
    }

    /**
     * Gets p_p_marzy_3_2
     *
     * @return \KsefApi\Model\TWybor1
     */
    public function getPPMarzy32()
    {
        return $this->container['p_p_marzy_3_2'];
    }

    /**
     * Sets p_p_marzy_3_2
     *
     * @param \KsefApi\Model\TWybor1 $p_p_marzy_3_2 p_p_marzy_3_2
     *
     * @return $this
     */
    public function setPPMarzy32($p_p_marzy_3_2)
    {
        $this->container['p_p_marzy_3_2'] = $p_p_marzy_3_2;

        return $this;
    }

    /**
     * Gets p_p_marzy_3_3
     *
     * @return \KsefApi\Model\TWybor1
     */
    public function getPPMarzy33()
    {
        return $this->container['p_p_marzy_3_3'];
    }

    /**
     * Sets p_p_marzy_3_3
     *
     * @param \KsefApi\Model\TWybor1 $p_p_marzy_3_3 p_p_marzy_3_3
     *
     * @return $this
     */
    public function setPPMarzy33($p_p_marzy_3_3)
    {
        $this->container['p_p_marzy_3_3'] = $p_p_marzy_3_3;

        return $this;
    }

    /**
     * Gets p_p_marzy_n
     *
     * @return \KsefApi\Model\TWybor1
     */
    public function getPPMarzyN()
    {
        return $this->container['p_p_marzy_n'];
    }

    /**
     * Sets p_p_marzy_n
     *
     * @param \KsefApi\Model\TWybor1 $p_p_marzy_n p_p_marzy_n
     *
     * @return $this
     */
    public function setPPMarzyN($p_p_marzy_n)
    {
        $this->container['p_p_marzy_n'] = $p_p_marzy_n;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
