<?php
/**
 * PodmiotUpowazniony
 *
 * PHP version 5
 *
 * @category Class
 * @package  KsefApi
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * KSeF API
 *
 * API do systemu KSeF
 *
 * OpenAPI spec version: 1.2.3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.52
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace KsefApi\Model;

use \ArrayAccess;
use \KsefApi\ObjectSerializer;

/**
 * PodmiotUpowazniony Class Doc Comment
 *
 * @category Class
 * @description Dane podmiotu upoważnionego, związanego z fakturą
 * @package  KsefApi
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class PodmiotUpowazniony implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'PodmiotUpowazniony';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'nr_eori' => '\KsefApi\Model\TZnakowy',
        'dane_identyfikacyjne' => '\KsefApi\Model\TPodmiot1',
        'adres' => '\KsefApi\Model\TAdres',
        'adres_koresp' => '\KsefApi\Model\TAdres',
        'dane_kontaktowe' => '\KsefApi\Model\DaneKontaktowePU[]',
        'rola_pu' => '\KsefApi\Model\TRolaPodmiotuUpowaznionego'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'nr_eori' => null,
        'dane_identyfikacyjne' => null,
        'adres' => null,
        'adres_koresp' => null,
        'dane_kontaktowe' => null,
        'rola_pu' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'nr_eori' => 'NrEORI',
        'dane_identyfikacyjne' => 'DaneIdentyfikacyjne',
        'adres' => 'Adres',
        'adres_koresp' => 'AdresKoresp',
        'dane_kontaktowe' => 'DaneKontaktowe',
        'rola_pu' => 'RolaPU'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'nr_eori' => 'setNrEori',
        'dane_identyfikacyjne' => 'setDaneIdentyfikacyjne',
        'adres' => 'setAdres',
        'adres_koresp' => 'setAdresKoresp',
        'dane_kontaktowe' => 'setDaneKontaktowe',
        'rola_pu' => 'setRolaPu'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'nr_eori' => 'getNrEori',
        'dane_identyfikacyjne' => 'getDaneIdentyfikacyjne',
        'adres' => 'getAdres',
        'adres_koresp' => 'getAdresKoresp',
        'dane_kontaktowe' => 'getDaneKontaktowe',
        'rola_pu' => 'getRolaPu'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }



    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['nr_eori'] = isset($data['nr_eori']) ? $data['nr_eori'] : null;
        $this->container['dane_identyfikacyjne'] = isset($data['dane_identyfikacyjne']) ? $data['dane_identyfikacyjne'] : null;
        $this->container['adres'] = isset($data['adres']) ? $data['adres'] : null;
        $this->container['adres_koresp'] = isset($data['adres_koresp']) ? $data['adres_koresp'] : null;
        $this->container['dane_kontaktowe'] = isset($data['dane_kontaktowe']) ? $data['dane_kontaktowe'] : null;
        $this->container['rola_pu'] = isset($data['rola_pu']) ? $data['rola_pu'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['dane_identyfikacyjne'] === null) {
            $invalidProperties[] = "'dane_identyfikacyjne' can't be null";
        }
        if ($this->container['adres'] === null) {
            $invalidProperties[] = "'adres' can't be null";
        }
        if ($this->container['rola_pu'] === null) {
            $invalidProperties[] = "'rola_pu' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets nr_eori
     *
     * @return \KsefApi\Model\TZnakowy
     */
    public function getNrEori()
    {
        return $this->container['nr_eori'];
    }

    /**
     * Sets nr_eori
     *
     * @param \KsefApi\Model\TZnakowy $nr_eori nr_eori
     *
     * @return $this
     */
    public function setNrEori($nr_eori)
    {
        $this->container['nr_eori'] = $nr_eori;

        return $this;
    }

    /**
     * Gets dane_identyfikacyjne
     *
     * @return \KsefApi\Model\TPodmiot1
     */
    public function getDaneIdentyfikacyjne()
    {
        return $this->container['dane_identyfikacyjne'];
    }

    /**
     * Sets dane_identyfikacyjne
     *
     * @param \KsefApi\Model\TPodmiot1 $dane_identyfikacyjne dane_identyfikacyjne
     *
     * @return $this
     */
    public function setDaneIdentyfikacyjne($dane_identyfikacyjne)
    {
        $this->container['dane_identyfikacyjne'] = $dane_identyfikacyjne;

        return $this;
    }

    /**
     * Gets adres
     *
     * @return \KsefApi\Model\TAdres
     */
    public function getAdres()
    {
        return $this->container['adres'];
    }

    /**
     * Sets adres
     *
     * @param \KsefApi\Model\TAdres $adres adres
     *
     * @return $this
     */
    public function setAdres($adres)
    {
        $this->container['adres'] = $adres;

        return $this;
    }

    /**
     * Gets adres_koresp
     *
     * @return \KsefApi\Model\TAdres
     */
    public function getAdresKoresp()
    {
        return $this->container['adres_koresp'];
    }

    /**
     * Sets adres_koresp
     *
     * @param \KsefApi\Model\TAdres $adres_koresp adres_koresp
     *
     * @return $this
     */
    public function setAdresKoresp($adres_koresp)
    {
        $this->container['adres_koresp'] = $adres_koresp;

        return $this;
    }

    /**
     * Gets dane_kontaktowe
     *
     * @return \KsefApi\Model\DaneKontaktowePU[]
     */
    public function getDaneKontaktowe()
    {
        return $this->container['dane_kontaktowe'];
    }

    /**
     * Sets dane_kontaktowe
     *
     * @param \KsefApi\Model\DaneKontaktowePU[] $dane_kontaktowe dane_kontaktowe
     *
     * @return $this
     */
    public function setDaneKontaktowe($dane_kontaktowe)
    {
        $this->container['dane_kontaktowe'] = $dane_kontaktowe;

        return $this;
    }

    /**
     * Gets rola_pu
     *
     * @return \KsefApi\Model\TRolaPodmiotuUpowaznionego
     */
    public function getRolaPu()
    {
        return $this->container['rola_pu'];
    }

    /**
     * Sets rola_pu
     *
     * @param \KsefApi\Model\TRolaPodmiotuUpowaznionego $rola_pu rola_pu
     *
     * @return $this
     */
    public function setRolaPu($rola_pu)
    {
        $this->container['rola_pu'] = $rola_pu;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
